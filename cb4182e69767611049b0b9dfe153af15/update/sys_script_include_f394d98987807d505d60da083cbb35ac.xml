<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_1070098_my_eda_0.EdaEventMidServer</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description>Send an event to EDA via mid server</description>
        <name>EdaEventMidServer</name>
        <script><![CDATA[var EdaEventMidServer = Class.create();
EdaEventMidServer.prototype = {
    initialize: function() {
    },

	send: function(mid, url, token, body, table, record_id) {
		if(body.startsWith('"')) {
			body = event_body.substring(1, event_body.length-1);
		}
		body = body.replaceAll('"', '&quot;');

		var automation_api = new sn_automation.AutomationAPI();
		var encrypted_token = automation_api.encrypt(token);

		var urlParam = '<parameter name="url" value="' + url + '" />';
		var tokenParam = '<parameter name="token" value="' + encrypted_token + '" />';
		var jsonParam = '<parameter name="json_data" value="' + body + '" />';

		var request = new GlideRecord("ecc_queue");
		request.initialize();
		request.name = "EDA Webhook";
		request.agent = "mid.server." + mid;
		request.payload = '<parameters><parameter name="script" value="var webhook = new EdaWebhookForward(); res = webhook.send();"/>' + urlParam + tokenParam + jsonParam + '</parameters>';
		request.queue = "output";
		request.topic = "JavascriptProbe";
		var request_id = request.insert();
		if (request_id) {
			gs.info("Queued EDA event ({0} sys_id={1}) for MID Server {2}. Tracking_id={3}.", table, record_id, mid, request_id);
			return request_id;
		}
		else {
			gs.error("Failed to queue EDA event ({0} sys_id={1}) for MID Server {2}.", table, record_id, mid);
			return null;
		}
	},
	
    type: 'EdaEventMidServer'
};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>bill_wei</sys_created_by>
        <sys_created_on>2023-07-13 17:26:41</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>f394d98987807d505d60da083cbb35ac</sys_id>
        <sys_mod_count>10</sys_mod_count>
        <sys_name>EdaEventMidServer</sys_name>
        <sys_package display_value="Event-Driven Ansible Notification Service" source="x_1070098_my_eda_0">cb4182e69767611049b0b9dfe153af15</sys_package>
        <sys_policy>read</sys_policy>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Event-Driven Ansible Notification Service">cb4182e69767611049b0b9dfe153af15</sys_scope>
        <sys_update_name>sys_script_include_f394d98987807d505d60da083cbb35ac</sys_update_name>
        <sys_updated_by>bill_wei</sys_updated_by>
        <sys_updated_on>2023-07-17 18:56:59</sys_updated_on>
    </sys_script_include>
</record_update>
